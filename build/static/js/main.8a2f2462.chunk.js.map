{"version":3,"sources":["Profile.js","App.js","index.js"],"names":["Profile","username","useParams","profileData","setProfileData","useState","metaTags","setMetaTags","useEffect","async","response","fetch","data","json","error","console","fetchProfileData","log","Object","keys","length","document","title","querySelectorAll","forEach","metaTag","remove","descriptionMetaTagToRemove","querySelector","metaTitle","createElement","setAttribute","head","appendChild","metaDescription","description","metaImage","image","metaUrl","url","metaType","descriptionMetaTag","React","App","Router","Routes","Route","path","element","container","getElementById","ReactDOM","createRoot","render","StrictMode"],"mappings":"kJAsFeA,MAlFf,WAEI,MAAMC,SAACA,GAAaC,eACbC,EAAaC,GAAkBC,mBAAS,OACxCC,EAAUC,GAAeF,mBAAS,IAmEzC,OAjEAG,oBAAU,KACmBC,WACrB,IAEI,MAAMC,QAAiBC,mDAAmDV,MAEpEW,QAAaF,EAASG,OAC5BT,EAAeQ,GACfL,EAAYK,GACd,MAAOE,GACLC,QAAQD,MAAM,+BAAgCA,KAItDE,IACD,CAACf,IACRc,QAAQE,IAAIX,GACRE,oBAAU,KACN,GAAIF,GAAYY,OAAOC,KAAKb,GAAUc,OAAS,EAAG,CAC9CC,SAASC,MAAQhB,EAASgB,MAGDD,SAASE,iBAAiB,yBAClCC,QAASC,GAAYA,EAAQC,UAG9C,MAAMC,EAA6BN,SAASO,cAAc,4BACtDD,GACAA,EAA2BD,SAI/B,MAAMG,EAAYR,SAASS,cAAc,QACzCD,EAAUE,aAAa,WAAY,YACnCF,EAAUE,aAAa,UAAWzB,EAASgB,OAC3CD,SAASW,KAAKC,YAAYJ,GAE1B,MAAMK,EAAkBb,SAASS,cAAc,QAC/CI,EAAgBH,aAAa,WAAY,kBACzCG,EAAgBH,aAAa,UAAWzB,EAAS6B,aACjDd,SAASW,KAAKC,YAAYC,GAE1B,MAAME,EAAYf,SAASS,cAAc,QACzCM,EAAUL,aAAa,WAAY,YACnCK,EAAUL,aAAa,UAAWzB,EAAS+B,OAC3ChB,SAASW,KAAKC,YAAYG,GAE1B,MAAME,EAAUjB,SAASS,cAAc,QACvCQ,EAAQP,aAAa,WAAY,UACjCO,EAAQP,aAAa,UAAWzB,EAASiC,KACzClB,SAASW,KAAKC,YAAYK,GAE1B,MAAME,EAAWnB,SAASS,cAAc,QACxCU,EAAST,aAAa,WAAY,WAClCS,EAAST,aAAa,UAAW,WACjCV,SAASW,KAAKC,YAAYO,GAG1B,MAAMC,EAAqBpB,SAASS,cAAc,QAClDW,EAAmBV,aAAa,OAAQ,eACxCU,EAAmBV,aAAa,UAAWzB,EAAS6B,aACpDd,SAASW,KAAKC,YAAYQ,KAE/B,CAACnC,IAECH,EAKDuC,IAAAZ,cAAA,WACIY,IAAAZ,cAAA,UAAK7B,EAAS,eALXyC,IAAAZ,cAAA,WAAK,eC1DLa,MAbf,WACE,OACED,IAAAZ,cAACc,IAAM,KACLF,IAAAZ,cAAA,WACAY,IAAAZ,cAAA,SAAG,QACDY,IAAAZ,cAACe,IAAM,KACLH,IAAAZ,cAACgB,IAAK,CAACC,KAAK,aAAaC,QAASN,IAAAZ,cAAC9B,EAAO,YCLpD,MAAMiD,EAAY5B,SAAS6B,eAAe,QAQ7BC,IAASC,WAAWH,GAC5BI,OACHX,IAAAZ,cAACY,IAAMY,WAAU,KACfZ,IAAAZ,cAACa,EAAG","file":"static/js/main.8a2f2462.chunk.js","sourcesContent":["// Profile.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction Profile() {\r\n    \r\n    const {username}  = useParams();\r\n    const [profileData, setProfileData] = useState(null);\r\n    const [metaTags, setMetaTags] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchProfileData = async () => {\r\n            try {\r\n                // const response = await fetch(`http://127.0.0.1:8000/user/${username}/`);\r\n                const response = await fetch(`https://leaponapi-test.herokuapp.com/user/${username}/`);\r\n                \r\n                const data = await response.json();\r\n                setProfileData(data);\r\n                setMetaTags(data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching profile data:\", error);\r\n            }\r\n        };\r\n\r\n        fetchProfileData();\r\n    }, [username]);\r\nconsole.log(metaTags)\r\n    useEffect(() => {\r\n        if (metaTags && Object.keys(metaTags).length > 0) {\r\n            document.title = metaTags.title;\r\n\r\n            // Remove existing meta tags\r\n            const metaTagsToRemove = document.querySelectorAll('meta[property^=\"og:\"]');\r\n            metaTagsToRemove.forEach((metaTag) => metaTag.remove());\r\n\r\n            // Remove existing description meta tag\r\n            const descriptionMetaTagToRemove = document.querySelector('meta[name=\"description\"]');\r\n            if (descriptionMetaTagToRemove) {\r\n                descriptionMetaTagToRemove.remove();\r\n            }\r\n\r\n            // Add new meta tags\r\n            const metaTitle = document.createElement('meta');\r\n            metaTitle.setAttribute('property', 'og:title');\r\n            metaTitle.setAttribute('content', metaTags.title);\r\n            document.head.appendChild(metaTitle);\r\n\r\n            const metaDescription = document.createElement('meta');\r\n            metaDescription.setAttribute('property', 'og:description');\r\n            metaDescription.setAttribute('content', metaTags.description);\r\n            document.head.appendChild(metaDescription);\r\n\r\n            const metaImage = document.createElement('meta');\r\n            metaImage.setAttribute('property', 'og:image');\r\n            metaImage.setAttribute('content', metaTags.image);\r\n            document.head.appendChild(metaImage);\r\n\r\n            const metaUrl = document.createElement('meta');\r\n            metaUrl.setAttribute('property', 'og:url');\r\n            metaUrl.setAttribute('content', metaTags.url);\r\n            document.head.appendChild(metaUrl);\r\n\r\n            const metaType = document.createElement('meta');\r\n            metaType.setAttribute('property', 'og:type');\r\n            metaType.setAttribute('content', \"profile\");\r\n            document.head.appendChild(metaType);\r\n\r\n            // Add new description meta tag\r\n            const descriptionMetaTag = document.createElement('meta');\r\n            descriptionMetaTag.setAttribute('name', 'description');\r\n            descriptionMetaTag.setAttribute('content', metaTags.description);\r\n            document.head.appendChild(descriptionMetaTag);\r\n        }\r\n    }, [metaTags]);\r\n\r\n    if (!profileData) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>{username}'s Profile</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Profile from \"./Profile\";\n\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n      <p>Home</p>\n        <Routes>\n          <Route path=\"/:username\" element={<Profile />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// index.js \nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nconst container = document.getElementById('root');\n\n// ReactDOM.hydrateRoot(container, \n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\nconst root = ReactDOM.createRoot(container);\nroot.render(\n  <React.StrictMode>\n    <App />\n    {/* <script>var process = { env: { NODE_ENV: 'development' } };</script> */}\n  </React.StrictMode>\n)\n\n"],"sourceRoot":""}